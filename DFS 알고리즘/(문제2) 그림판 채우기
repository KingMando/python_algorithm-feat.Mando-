# 출처: 코드업 2610번 그림판 채우기
# [설계2] DFS 설계하기 (2) DFS 함수 만들기
def print_graph():
    for i in range(10):
        for j in range(10):
            print(graph[i][j],end="")
        print()
        
# [설계2] dfs 탐색 설계 (2) 함수 설계
def dfs(x, y):
    # [설계2] dfs 탐색 설계 (3) 종료 조건 설계
    if x<0 or x >9 or y<0 or y>9: # 그래프 범위를 벗어나면 탐색 종료
        return
    # [설계2] dfs 탐색 설계 (4) 방문 처리하기
    if graph[x][y] == '_': # 해당 위치가 색칠되어 있지 않다면
        graph[x][y] ='*' # 해당 위치 색칠 및 방문 처리
        # 상,좌,하,우 dfs 탐색하기
        dfs(x-1, y) # 상
        dfs(x, y-1) # 좌
        dfs(x+1, y) # 하
        dfs(x, y+1) # 우
        return    
    return

# [설계1] 그래프 입력 받기
graph = []
for i in range(10):
        graph.append(list(input()))

y, x = map(int, input().split()) # 본 문제에서는 x,y 좌표 의미가 반대임에 유의하여 입력받기

# [설계2] dfs 탐색 함수 설계 (1) 함수 호출
result = dfs(x, y) # 해당 위치 그림판 채우기를 위한 dfs 탐색 시작

# [설계3] 정답 출력하기
print_graph() # 정답 그래프 출력하기
