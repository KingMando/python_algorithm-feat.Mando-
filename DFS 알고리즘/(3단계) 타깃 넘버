answer =0 # target 만드는 방법의 수를 저장하기 위한 변수

# [설계2] dfs 함수 호출 및 설계
def dfs(sum, cnt):
    global answer
    
    # [설계4] 종료 조건(back 조건) 설계
    if cnt == len(numbers): # 현재 cnt와 numbers 개수가 같으면 탐색 종료
        if sum == target: # sum과 target이 같으면 정답 처리
            answer+=1
            return
        else:  # sum과 target이 같지 않으면 정답 처리X
            return
    # [설계5] 탐색 과정 설계
    dfs(sum+numbers[cnt], cnt+1) # 더하는 경우(왼쪽 갈래)
    dfs(sum-numbers[cnt], cnt+1) # 빼는 경우(오른쪽 갈래)
       
# [설계1] 입력 받기
n , target = map(int, input().split())
numbers = []
for i in range(n):
    numbers.append(int(input()))

# [설계2] dfs 함수 호출 및 설계
dfs(0, 0)
print(answer)
